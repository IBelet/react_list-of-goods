{"version":3,"sources":["components/Button/Button.jsx","components/GoodsList/GoodsList.jsx","components/Select/Select.jsx","components/Content/Content.js","App.js","index.js"],"names":["Button","React","memo","name","onClick","type","className","propTypes","PropTypes","string","isRequired","func","GoodsList","goods","map","good","key","arrayOf","LengthSelect","range","onChange","value","number","makeRange","arr","maxLength","reduce","acc","item","length","i","push","Content","state","props","minLength","sortBy","isReversed","reverse","setState","sortAlphabetically","sortByLength","reset","changeMinLength","event","target","this","visibleGoods","filter","sort","a","b","localeCompare","PureComponent","goodsFromServer","App","isContentHidden","toggleList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79b67795.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = React.memo(({ name, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    className=\"button\"\n  >\n    {name}\n  </button>\n));\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n));\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LengthSelect = React.memo(({ range, onChange, value }) => (\n  <select\n    onChange={onChange}\n    value={value}\n  >\n    {range.map(number => (\n      <option\n        value={number}\n        key={number}\n      >\n        {number}\n      </option>\n    ))}\n  </select>\n));\n\nLengthSelect.propTypes = {\n  range: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\nimport { GoodsList } from '../GoodsList';\nimport { LengthSelect } from '../Select';\n\nfunction makeRange(arr) {\n  const maxLength = arr.reduce((acc, item) => (\n    acc < item.length ? item.length : acc\n  ), 0);\n\n  const range = [];\n\n  for (let i = 1; i <= maxLength + 1; i += 1) {\n    range.push(i);\n  }\n\n  return range;\n}\n\nexport class Content extends React.PureComponent {\n  state = {\n    goods: this.props.goods,\n    minLength: 0,\n    sortBy: 'id',\n    isReversed: false,\n    range: makeRange(this.props.goods),\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabet' });\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  reset = () => {\n    this.setState({\n      sortBy: 'id',\n      minLength: 0,\n    });\n  }\n\n  changeMinLength = (event) => {\n    this.setState({ minLength: +event.target.value });\n  }\n\n  render() {\n    const {\n      goods,\n      minLength,\n      isReversed,\n      sortBy,\n      range,\n    } = this.state;\n\n    const visibleGoods = goods.filter(good => (\n      good.length >= minLength\n    ));\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'id':\n        case 'length':\n          return a[sortBy] - b[sortBy];\n\n        case 'alphabet':\n          return a.localeCompare(b);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <>\n        <GoodsList goods={visibleGoods} />\n\n        <div>\n          <Button\n            name=\"Reverse\"\n            onClick={this.reverse}\n          />\n\n          <Button\n            name=\"Sort alphabetically\"\n            onClick={this.sortAlphabetically}\n          />\n\n          <Button\n            name=\"Sort by length\"\n            onClick={this.sortByLength}\n          />\n\n          <Button\n            name=\"Reset\"\n            onClick={this.reset}\n          />\n        </div>\n\n        <p>\n          Min length of words :\n        </p>\n\n        <LengthSelect\n          range={range}\n          onChange={this.changeMinLength}\n          value={minLength}\n        />\n      </>\n    );\n  }\n}\n\nContent.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Button } from './components/Button';\nimport { Content } from './components/Content/Content';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    isContentHidden: true,\n  }\n\n  toggleList = () => {\n    this.setState(state => ({\n      isContentHidden: !state.isContentHidden,\n    }));\n  }\n\n  render() {\n    const {\n      isContentHidden,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Goods</h1>\n        {isContentHidden\n          ? <Button name=\"Start\" onClick={this.toggleList} />\n          : <Content goods={goodsFromServer} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}